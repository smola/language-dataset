// room script file

Overlay * textOverlay1;
Overlay * textOverlay2;

function ShowTextCentered (String text, int pad) {
  int centerX, centerY;
  int textWidth, textHeight;
  int x, y;
  centerX = Screen.Viewport.Width / 2;
  centerY = Screen.Viewport.Height / 2;

  textWidth = GetTextWidth (text, eFontTumbleSpeech);
  textHeight = GetTextHeight (text, eFontTumbleSpeech, textWidth);

  x = centerX - (textWidth / 2);
  y = centerY - (textHeight / 2);
  //eFontCambria14B
  textOverlay1 = textOverlay1.CreateTextual (x + pad, y, textWidth + 7, eFontTumbleSpeech, 15, text);
}

function ShowTextCentered2 (String text, int padx, int pady, int o) {
  int centerX, centerY;
  int textWidth, textHeight;
  int x, y;
  centerX = Screen.Viewport.Width / 2;
  centerY = Screen.Viewport.Height / 2;

  textWidth = GetTextWidth (text, eFontCambria14B);
  textHeight = GetTextHeight (text, eFontCambria14B, textWidth);

  x = centerX - (textWidth / 2);
  y = centerY - (textHeight / 2);
  switch (o) {
    case 0:
      textOverlay1 = Overlay.CreateTextual (x + padx, y + pady, textWidth + 7, eFontCambria14B, 13, text);
      break;
    case 1:
      textOverlay2 = Overlay.CreateTextual (x + padx, y + pady, textWidth + 7, eFontCambria14B, 13, text);
      break;
  }
}

function ShowTextCentered3 (String text, int padx, int pady, int o) {
  int centerX, centerY;
  int textWidth, textHeight;
  int x, y;
  centerX = Screen.Viewport.Width / 2;
  centerY = Screen.Viewport.Height / 2;

  textWidth = GetTextWidth (text, eFonteFontMI8);
  textHeight = GetTextHeight (text, eFonteFontMI8, textWidth);

  x = centerX - (textWidth / 2);
  y = centerY - (textHeight / 2);
  //eFontCambria14B
  switch (o) {
    case 0:
      textOverlay1 = Overlay.CreateTextual (x + padx, y + pady, textWidth + 7, eFonteFontMI8, 13, text);
      break;
    case 1:
      textOverlay2 = Overlay.CreateTextual (x + padx, y + pady, textWidth + 7, eFonteFontMI8, 13, text);
      break;
  }

}

function room_FirstLoad () {

}

function room_AfterFadeIn () {
  
  #ifdef CAT_NOINTRO
    // if debug, go straight to game, skipping intro.
    player.ChangeRoom (3, 110, 140, eDirectionDown);
    return;
  #endif
  
  StartCutscene (eSkipESCOrRightButton);

  String tr_lang = GetTranslation ("GUI_LANGUAGE");
  tr_lang = tr_lang.LowerCase ();

  String MyLines[30];

  if (tr_lang == "es") {
    MyLines[0] = "En el centro de la sierra";
    MyLines[1] = "Un pueblo muy tranquilo";
    MyLines[2] = "TM & (c) 2019 Juan M. \"assman\" Casillas Games.";
    MyLines[3] = "Todos los derechos reservados.";
    MyLines[4] = "Creado y Diseñado por";
    MyLines[5] = "Juan M. \"assman\" Casillas";
    MyLines[6] = "Escrito y programado por";
    MyLines[7] = "Juan M. \"assman\" Casillas (e Internet)";
    MyLines[8] = "Decorados por";
    MyLines[9] = "Juan M. \"assman\" Casillas (e Internet)";
    MyLines[10] = "Animación por";
    MyLines[11] = "Juan M. \"assman\" Casillas (e Internet)";
    MyLines[12] = "Gráficos VGA-256 por Juan M. \"assman\" Casillas";
    MyLines[13] = "(eh, que aquí solo trabajo yo!)";
    MyLines[14] = "Música Original por";
    MyLines[15] = "Juan M. \"assman\" Casillas...";
    MyLines[16] = "...si es que aprendo a tocar";
    MyLines[17] = "el dichoso ukelele...";
    MyLines[18] = "Pruebas por";
    MyLines[19] = "(¿como? ¿pruebas? ¿qué pruebas?)";
    MyLines[20] = "... Debería haber probado bien";
    MyLines[21] = "pero si compila, funciona!";
    MyLines[22] = "Producido por";
    MyLines[23] = "*tu dinero aquí*";
    MyLines[24] = "Sistema de Historia \"SCUMM\" por";
    MyLines[25] = "Ron Gilbert (el Maestro)";
    MyLines[26] = "Desarrollado en AGS (c) Chris Jones";
    MyLines[27] = "https://www.adventuregamestudio.co.uk";
  }
  else {
  //if (tr_lang == "en") {
    MyLines[0] = "In the deep of the mountain";
    MyLines[1] = "A very quiet town";
    MyLines[2] = "TM & (c) 2019 Juan M. \"assman\" Casillas Games.";
    MyLines[3] = "All rights reserved.";
    MyLines[4] = "Created and Designed by";
    MyLines[5] = "Juan M. \"assman\" Casillas";
    MyLines[6] = "Written and programmed by";
    MyLines[7] = "Juan M. \"assman\" Casillas";
    MyLines[8] = "Background art by";
    MyLines[9] = "Juan M. \"assman\" Casillas";
    MyLines[10] = "Animation by";
    MyLines[11] = "Juan M. \"assman\" Casillas (and...Internet)";
    MyLines[12] = "256 Color art by Juan M. \"assman\" Casillas";
    MyLines[13] = "(ey, just me working here!)";
    MyLines[14] = "Original Music by";
    MyLines[15] = "Juan M. \"assman\" Casillas...";
    MyLines[16] = "...if I learn to play";
    MyLines[17] = "the damn ukelele...";
    MyLines[18] = "Lead testing by";
    MyLines[19] = "(what? tests? what tests?)";
    MyLines[20] = "... I should created lot of tests";
    MyLines[21] = "but if it compiles, it works!";
    MyLines[22] = "Produced by";
    MyLines[23] = "*your money here*";
    MyLines[24] = "\"SCUMM\" Story system by";
    MyLines[25] = "Ron Gilbert (aka the Master)";
    MyLines[26] = "Developed in AGS (c) Chris Jones";
    MyLines[27] = "https://www.adventuregamestudio.co.uk";
  }




  ShowTextCentered("Juan M. \"assman\" Casillas\n             - Games -",50);
  Wait(GetGameSpeed() * 3); // 3 seconds
  textOverlay1.Remove();


  oBg.Visible = true;
  oBGComposite.Visible = true;

  SetTimer (1, GetGameSpeed () * 1); // 1 second
  int count = 0;

  oCloud.Visible = true;
  oCloud2.Visible = true;

  while (true) {
    if (IsTimerExpired (1)) {
      oCloud.X--;
      oCloud2.X--;
      count++;

      if (count == 2) {
        ShowTextCentered2 (MyLines[0], 0, 80, 0);
      }
      if (count == 5) {
        textOverlay1.Remove ();
        ShowTextCentered2 (MyLines[1], 0, 80, 0);
      }
      if (count == 9) {
        textOverlay1.Remove ();
        oLogo.Visible = true;
        ShowTextCentered3 (MyLines[2], 0, 80, 0);
        ShowTextCentered3 (MyLines[3], 0, 90, 1);
      }
      if (count == 14) {
        textOverlay1.Remove ();
        textOverlay2.Remove ();
        ShowTextCentered2 (MyLines[4], 0, 72, 0);
        ShowTextCentered2 (MyLines[5], 0, 90, 1);
      }

      if (count == 18) {
        textOverlay1.Remove ();
        textOverlay2.Remove ();
        ShowTextCentered2 (MyLines[6], 0, 72, 0);
        ShowTextCentered2 (MyLines[7], 0, 90, 1);
      }
      if (count == 22) {
        textOverlay1.Remove ();
        textOverlay2.Remove ();
        ShowTextCentered2 (MyLines[8], 0, 72, 0);
        ShowTextCentered2 (MyLines[9], 0, 90, 1);
      }
      if (count == 26) {
        textOverlay1.Remove ();
        textOverlay2.Remove ();
        ShowTextCentered2 (MyLines[10], 0, 72, 0);
        ShowTextCentered2 (MyLines[11], 0, 90, 1);
      }
      if (count == 31) {
        textOverlay1.Remove ();
        textOverlay2.Remove ();
        ShowTextCentered3 (MyLines[12], 0, 80, 0);
        ShowTextCentered3 (MyLines[13], 0, 90, 1);
      }
      if (count == 35) {
        textOverlay1.Remove ();
        textOverlay2.Remove ();
        ShowTextCentered2 (MyLines[14], 0, 72, 0);
        ShowTextCentered2 (MyLines[15], 0, 90, 1);
      }
      if (count == 38) {
        textOverlay1.Remove ();
        textOverlay2.Remove ();
        ShowTextCentered2 (MyLines[16], 0, 72, 0);
        ShowTextCentered2 (MyLines[17], 0, 90, 1);
      }

      if (count == 42) {
        textOverlay1.Remove ();
        textOverlay2.Remove ();
      }

      if (count == 45) {
        ShowTextCentered2 (MyLines[18], 0, 72, 0);
        ShowTextCentered2 (MyLines[19], 0, 90, 1);
      }
      if (count == 48) {
        textOverlay1.Remove ();
        textOverlay2.Remove ();
        ShowTextCentered3 (MyLines[20], 0, 80, 0);
        ShowTextCentered3 (MyLines[21], 0, 90, 1);
      }
      if (count == 53) {
        textOverlay1.Remove ();
        textOverlay2.Remove ();
        ShowTextCentered2 (MyLines[22], 0, 72, 0);
        ShowTextCentered2 (MyLines[23], 0, 90, 1);
      }
      if (count == 56) {
        textOverlay1.Remove ();
        textOverlay2.Remove ();
      }
      if (count == 60) {
        ShowTextCentered2 (MyLines[24], 0, 72, 0);
        ShowTextCentered2 (MyLines[25], 0, 90, 1);
      }
      if (count == 65) {
        //textOverlay1.Remove();
        //textOverlay2.Remove();
        ShowTextCentered2 (MyLines[26], 0, 72, 0);
        ShowTextCentered2 (MyLines[27], 0, 90, 1);
      }
      if (count == 67) {
        textOverlay1.Remove ();
        textOverlay2.Remove ();
      }

      if (count > 72) break;
      SetTimer (1, GetGameSpeed () * 1); // 1 second
    } else {
      Wait (1);
    }
  }

  EndCutscene ();

//  Verbs.EnableGui ();
//  gMain.Visible = true;
//  mouse.Visible = true;
//  gPlayers.Visible = true;
  player.Transparency = 0; // visible
  Mouse.SetPosition(0, 0); // to avoid nasty status messages (cardbox XD)
  CatGame.SetIdleView(player);
  player.ChangeRoom (3, 225, 58, eDirectionDown);

}